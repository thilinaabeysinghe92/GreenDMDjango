/* jscow - Javascript Component Framework - jscow-radio-1.0.0 - Mario Linz - http://www.jscow.de */jsCow.res.components.radio=function(){};jsCow.res.components.radio.prototype={init:function(){return this},setDefaultMVC:function(){this.setModel(jsCow.res.model.radio);this.setView(jsCow.res.view.radio);this.setController(jsCow.res.controller.radio);return this},click:function(){this.globalEvents.trigger("click",{},this);return this},setGroup:function(a){this.globalEvents.trigger("setGroup",{group:a},this);return this},checked:function(){this.globalEvents.trigger("click",{},this);return this},setValue:function(a){this.globalEvents.trigger("setValue",{value:a},this);return this},getValue:function(){return this.getModel().getConfig("value")},setLabel:function(a){this.globalEvents.trigger("setLabel",{label:a},this);return this}};jsCow.res.model.radio=function(){this.type="jsCow.res.model.radio";this.config={enabled:true,checked:false,radioGroup:false,value:false,label:false}};jsCow.res.model.radio.prototype={init:function(){this.globalEvents.trigger("viewInit",this.getConfig(),this.getCmp())},click:function(){if(this.isEnabled()){if(this.getConfig("checked")){this.setConfig({checked:false})}else{this.setConfig({checked:true})}this.globalEvents.trigger("radioGroupEvent",{activeRadio:this.getCmp(),radioGroup:this.getConfig("radioGroup")});this.globalEvents.trigger("viewUpdate",this.getConfig(),this.getCmp())}return this},setGroup:function(a){if(this.isEnabled()){if(a.data.group){this.setConfig({radioGroup:a.data.group});this.globalEvents.register("radioGroupEvent",this.getCmp())}else{this.setConfig({radioGroup:false});this.globalEvents.unregister("radioGroupEvent",this.getCmp())}}return this},radioGroupEvent:function(a){if(this.isEnabled()){if((a.data.activeRadio.getID()==this.getCmp().getID())&&(a.data.radioGroup==this.getConfig("radioGroup"))){this.setConfig({checked:true})}else{if(a.data.radioGroup==this.getConfig("radioGroup")){this.setConfig({checked:false})}}this.globalEvents.trigger("viewUpdate",this.getConfig(),this.getCmp())}return this},checked:function(){this.setConfig({checked:false});this.click();return this},setValue:function(a){this.setConfig({value:a.data.value});return this},setLabel:function(a){this.setConfig({label:a.data.label});this.globalEvents.trigger("viewUpdate",this.getConfig(),this.getCmp());return this}};jsCow.res.view.radio=function(){this.execInit=false;this.type="jsCow.res.view.radio";this.dom={};this.dom.main=$("<div/>").addClass("jscow-form-radio jscow-float-left jscow-cursor");this.dom.box=$("<div/>").addClass("jscow-form-radio-box jscow-float-left").appendTo(this.dom.main);this.dom.check=$("<div/>").addClass("jscow-form-radio-check").appendTo(this.dom.box);this.dom.label=$("<div/>").addClass("jscow-form-radio-label jscow-float-left")};jsCow.res.view.radio.prototype={init:function(a){this.dom.main.click((function(b){return function(){b.click()}})(this));this.update(a)},update:function(a){var a=a.data;if(a){if(!a.enabled||a.globalDisabled){this.dom.main.addClass("jscow-form-radio-disabled").removeClass("jscow-form-radio jscow-cursor")}else{this.dom.main.addClass("jscow-form-radio jscow-cursor").removeClass("jscow-form-radio-disabled");if(a.checked){this.dom.check.css({display:"block"})}else{this.dom.check.css({display:"none"})}if(a.label){this.dom.label.html(a.label).css({display:"block"});this.dom.box.after(this.dom.label)}else{this.dom.label.html(a.label).css({display:"none"})}if(a.hide){this.dom.main.addClass("jscow-hide")}else{this.dom.main.removeClass("jscow-hide")}}}return this},click:function(){this.globalEvents.trigger("click",{},this.getCmp());return this},setFocus:function(a){this.dom.main.addClass("jscow-focus")}};jsCow.res.controller.radio=function(){this.type="jsCow.res.controller.radio"};jsCow.res.controller.radio.prototype={init:function(){},handleClick:function(a){if(this.isMethodExists(this.getModel().click)){this.getModel().click(a)}return this},handleSetGroup:function(a){if(this.isMethodExists(this.getModel().setGroup)){this.getModel().setGroup(a)}return this},handleRadioGroupEvent:function(a){if(this.isMethodExists(this.getModel().radioGroupEvent)){this.getModel().radioGroupEvent(a)}return this},handleChecked:function(a){if(this.isMethodExists(this.getModel().checked)){this.getModel().checked(a)}return this},handleSetValue:function(a){if(this.isMethodExists(this.getModel().setValue)){this.getModel().setValue(a)}return this},handleSetLabel:function(a){if(this.isMethodExists(this.getModel().setLabel)){this.getModel().setLabel(a)}return this}};